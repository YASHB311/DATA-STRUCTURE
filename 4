//Binary tree
#include <stdio.h>
#include <malloc.h>

struct node
{
struct node * left;
char data;
struct node * right;
};

struct node *constructTree(int);
void inorder(struct node *);
char array[] = { 'A', 'B', 'C', 'D', 'E', 'F', 'G', '\0', '\0', 'H', 'I' };
int leftchild[]={1,3,5,-1,9,-1,-1,-1,-1,-1,-1};
int rightchild[]={2,4,6,-1,10,-1,-1,-1,-1,-1,-1};

void main()
{
    struct node*root;
    root= constructTree(0);
    printf("In-Order Transversal:\n");
    inorder(root);
    getch();
}

struct node *constructTree(int index)
{
struct node *new = NULL;
if(index!=-1)
{
    new=(struct node*)malloc(sizeof (struct node));
    new->left = constructTree( leftchild[index]);
    new->data = array[index];
    new->right = constructTree(rightchild[index]);
}
return new;
}
void inorder(struct node *root)
    {

if(root!= NULL)
        {
        inorder(root->left);
        printf("%c\t",root->data);
        inorder(root->right);
        }
    }
